name: build/electron
run-name: Building and releasing electron app ðŸš€
on: push

jobs:
  dependencies:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-latest, windows-latest]
    env:
      GH_TOKEN: ${{ secrets.github_token }}
    steps:
      - name: Create source dir
        run: mkdir -p gdal-src

      - name: Check out GDAL
        uses: actions/checkout@v1
        with:
          repository: OSGeo/gdal
          ref: stable
          fetch-depth: 1
          fetch-tags: false
          path: gdal-src

      - name: Create source dir
        run: ls gdal-src -l

      - name: Build GDAL
        uses: threeal/cmake-action@v2.1.0
        with:
          build-dir: gdal-build
          source-dir: gdal-src/gdal

      - name: "Upload artifact"
        if: ${{ matrix.os == 'macos-13' }}
        uses: actions/upload-artifact@v4
        with:
          name: gdal_${{ matrix.os }}
          path: gdal-build

  # release:
  #   if: ${{ github.ref == 'refs/heads/main' || github.event.label.name == 'create-build' }}
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [macos-13, macos-latest, windows-latest]
  #   env:
  #     DEBUG: electron-builder
  #     GH_TOKEN: ${{ secrets.github_token }}
  #   steps:
  #     - name: Set vars on windows
  #       if: ${{ startsWith(matrix.os, 'win') }}
  #       run: echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV

  #     - name: Set vars on macos
  #       if: ${{ startsWith(matrix.os, 'macos') }}
  #       run: echo "SHORT_SHA=$(echo "${{ github.sha }}" | cut -c 1-8)" >> $env:GITHUB_ENV

  #     - name: Check out repository
  #       uses: actions/checkout@v1

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 20

  #     - name: "npm install"
  #       run: npm install

  #     - name: "npm build"
  #       run: npm run build

  #     - name: "electron-builder"
  #       run: npx electron-builder --publish never

  #     - name: "Upload mac artifact"
  #       if: ${{ matrix.os == 'macos-latest' }}
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: CTT_MacOS_arm64_${{ env.SHORT_SHA }}
  #         path: |
  #           dist/*.dmg
  #           dist/*.dmg.blockmap
  #           dist/*.yml

  #     - name: "Upload mac artifact"
  #       if: ${{ matrix.os == 'macos-13' }}
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: CTT_MacOS_amd64_${{ env.SHORT_SHA }}
  #         path: |
  #           dist/*.dmg
  #           dist/*.dmg.blockmap
  #           dist/*.yml

  #     - name: "Upload windows artifact"
  #       if: ${{ startsWith(matrix.os, 'win') }}
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: CTT_Windows_64_${{ env.SHORT_SHA }}
  #         path: dist
